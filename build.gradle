plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'java-library'
}

group = "me.hannsi.lfjg"
version = "1.0-SNAPSHOT"
project.ext.lwjglVersion = "3.3.4"
project.ext.jomlVersion = "1.10.7"
project.ext.lwjgl3awtVersion = "0.1.8"
project.ext.steamworks4jVersion = "1.9.0"
project.ext.steamworks4jserverVersion = "1.9.0"
project.ext.jomlprimitivesVersion = "1.10.0"
project.ext.lwjglNatives = "natives-windows"

repositories {
    mavenCentral()
}

dependencies {
    api "org.jetbrains:annotations:24.0.0"

    testImplementation platform("org.junit:junit-bom:5.9.1")
    testImplementation "org.junit.jupiter:junit-jupiter"

    api "org.reflections:reflections:0.10.2"

    api "org.apache.logging.log4j:log4j-api:2.23.1"
    api "org.apache.logging.log4j:log4j-core:2.23.1"
    api "org.apache.logging.log4j:log4j-web:2.23.1"
    api "org.slf4j:slf4j-api:1.7.36"
    api "ch.qos.logback:logback-classic:1.5.16"

    api("org.apache.xmlgraphics:xmlgraphics-commons:2.9") {
        exclude module: "commons-io"
    }
    api "commons-io:commons-io:2.14.0"
    api "org.apache.xmlgraphics:batik-transcoder:1.17"

    api platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    def lwjglModules = [
            "lwjgl",
            "lwjgl-assimp",
            "lwjgl-bgfx",
            "lwjgl-cuda",
            "lwjgl-egl",
            "lwjgl-fmod",
            "lwjgl-freetype",
            "lwjgl-glfw",
            "lwjgl-harfbuzz",
            "lwjgl-hwloc",
            "lwjgl-jawt",
            "lwjgl-jemalloc",
            "lwjgl-ktx",
            "lwjgl-libdivide",
            "lwjgl-llvm",
            "lwjgl-lmdb",
            "lwjgl-lz4",
            "lwjgl-meow",
            "lwjgl-meshoptimizer",
            "lwjgl-msdfgen",
            "lwjgl-nanovg",
            "lwjgl-nfd",
            "lwjgl-nuklear",
            "lwjgl-odbc",
            "lwjgl-openal",
            "lwjgl-opencl",
            "lwjgl-opengl",
            "lwjgl-opengles",
            "lwjgl-openvr",
            "lwjgl-openxr",
            "lwjgl-opus",
            "lwjgl-ovr",
            "lwjgl-par",
            "lwjgl-remotery",
            "lwjgl-rpmalloc",
            "lwjgl-shaderc",
            "lwjgl-spvc",
            "lwjgl-sse",
            "lwjgl-stb",
            "lwjgl-tinyexr",
            "lwjgl-tinyfd",
            "lwjgl-tootle",
            "lwjgl-vma",
            "lwjgl-vulkan",
            "lwjgl-xxhash",
            "lwjgl-yoga",
            "lwjgl-zstd"
    ]
    lwjglModules.each { module ->
        implementation "org.lwjgl:$module"
        if (module != "lwjgl-cuda" && module != "lwjgl-egl" && module != "lwjgl-fmod" && module != "lwjgl-jawt" && module != "lwjgl-odbc" && module != "lwjgl-opencl" && module != "lwjgl-vulkan") {
            runtimeOnly "org.lwjgl:$module::$lwjglNatives"
        }
    }

    api "org.joml:joml:${jomlVersion}"
    api "org.lwjglx:lwjgl3-awt:${lwjgl3awtVersion}"
    api "com.code-disaster.steamworks4j:steamworks4j:${steamworks4jVersion}"
    api "com.code-disaster.steamworks4j:steamworks4j-server:${steamworks4jserverVersion}"
    api "org.joml:joml-primitives:${jomlprimitivesVersion}"

    api "org.bytedeco:javacv-platform:1.5.10"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "me.hannsi.test.TestGuiFrame"
    }
}

sourceCompatibility = JavaVersion.VERSION_19
targetCompatibility = JavaVersion.VERSION_19

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

configurations {
    runtimeElements {
        extendsFrom runtimeOnly
    }
}